import os 
import sys

ip = sys.argv[1]

os.system("rm -rf DUMP 2> error.txt")
os.system("mkdir DUMP 2> error.txt")
def nmap_scan():
	os.system(f"nmap -sV -O {ip} 1> DUMP/scan.txt 2> DUMP/error.txt")		# to store the main scan 

def port_and_os_detection():						# modules for finding os and ports 
	c = open("DUMP/scan.txt",'r')
	c = c.read().split("\n")
	for v in c:
		if v==' ':
			c.remove(v)
	try:
		c.pop()
		c.pop()
		c.pop()
		c.pop()
	except:
		pass

	os.system('echo "|-----------------------[*] PORT AND SERVICE ------------------------------|" && echo "PORT     STATE SERVICE     VERSION" && cat DUMP/scan.txt | grep "open\|filtered" && echo "|-------------------------------------------------------------------------------------|" ')	

	       


	print("\n|-----------------------[*] OS DISCOVERY ------------------------------|")
	try:
		for v in c:
			if list(v)[0]=='R' and list(v)[1]=='u' or list(v)[0]=='O' and list(v)[1]=='S':
				print(v)	
	except:
		pass
	print("|-------------------------------------------------------------------------------------|\n\n")




def search_exploits():
	os.system('cat DUMP/scan.txt | grep "open\|filtered" > DUMP/open.txt ')
	f = open("DUMP/open.txt",'r')
	f = f.read().split("\n")
	f.pop()
	print("/////////////////////////////////////////////////////////////////////////////////////////////////////")
	print("  [$] VULNERABILITIES WITH RESPECT TO SERVICES RUNNING ON HOST !! ")
	print("/////////////////////////////////////////////////////////////////////////////////////////////////////")
	for x in f:
		x = x.split()
		print("\n\n|#####################################|")
		print("|## SEARCHING FOR : [ {} ]  ".format(x[3]))
		print("|#####################################|")
		os.system("searchsploit --colour {} | cut -d '|' -f1 1> DUMP/exploits.txt ".format(x[3]))
		os.system("cp DUMP/exploits.txt /root/Desktop/file_out.txt")		
		c = open("DUMP/exploits.txt",'r')
		c = c.read().split("\n")
		c.pop()
		for v in c:
			if list(v)[0]=='-':
				pass
			else:
				print(v)	


# Function calls 

nmap_scan()		# PERFORM NMAP SCAN
port_and_os_detection()		# OPEN PORT AND SERVICES
search_exploits()		# SEARCHING EXPLOITS FOR OPEN PORTS'S SERVICES

os.system("rm -rf DUMP")
os.system("rm -rf error.txt")


